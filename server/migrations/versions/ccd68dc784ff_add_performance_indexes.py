"""add_performance_indexes

Revision ID: ccd68dc784ff
Revises: 20250618140000
Create Date: 2025-07-15 11:48:42.854741

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ccd68dc784ff"
down_revision: Union[str, None] = "20250618140000"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("meeting", schema=None) as batch_op:
        batch_op.create_index("idx_meeting_room_id", ["room_id"], unique=False)

    with op.batch_alter_table("recording", schema=None) as batch_op:
        batch_op.drop_constraint("uq_recording_object_key", type_="unique")
        batch_op.create_index("idx_recording_meeting_id", ["meeting_id"], unique=False)

    with op.batch_alter_table("room", schema=None) as batch_op:
        batch_op.create_index("idx_room_is_shared", ["is_shared"], unique=False)

    with op.batch_alter_table("transcript", schema=None) as batch_op:
        batch_op.create_index("idx_transcript_created_at", ["created_at"], unique=False)
        batch_op.create_index(
            "idx_transcript_recording_id", ["recording_id"], unique=False
        )
        batch_op.create_index("idx_transcript_user_id", ["user_id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("transcript", schema=None) as batch_op:
        batch_op.drop_index("idx_transcript_user_id")
        batch_op.drop_index("idx_transcript_recording_id")
        batch_op.drop_index("idx_transcript_created_at")

    with op.batch_alter_table("room", schema=None) as batch_op:
        batch_op.drop_index("idx_room_is_shared")

    with op.batch_alter_table("recording", schema=None) as batch_op:
        batch_op.drop_index("idx_recording_meeting_id")
        batch_op.create_unique_constraint(
            "uq_recording_object_key", ["bucket_name", "object_key"]
        )

    with op.batch_alter_table("meeting", schema=None) as batch_op:
        batch_op.drop_index("idx_meeting_room_id")

    op.create_table(
        "_alembic_tmp_meeting",
        sa.Column("id", sa.VARCHAR(), nullable=False),
        sa.Column("room_name", sa.VARCHAR(), nullable=True),
        sa.Column("room_url", sa.VARCHAR(), nullable=True),
        sa.Column("host_room_url", sa.VARCHAR(), nullable=True),
        sa.Column("start_date", sa.DATETIME(), nullable=True),
        sa.Column("end_date", sa.DATETIME(), nullable=True),
        sa.Column("user_id", sa.VARCHAR(), nullable=True),
        sa.Column("room_id", sa.VARCHAR(), nullable=True),
        sa.Column(
            "is_locked", sa.BOOLEAN(), server_default=sa.text("0"), nullable=False
        ),
        sa.Column(
            "room_mode",
            sa.VARCHAR(),
            server_default=sa.text("'normal'"),
            nullable=False,
        ),
        sa.Column(
            "recording_type",
            sa.VARCHAR(),
            server_default=sa.text("'cloud'"),
            nullable=False,
        ),
        sa.Column(
            "recording_trigger",
            sa.VARCHAR(),
            server_default=sa.text("'automatic-2nd-participant'"),
            nullable=False,
        ),
        sa.Column(
            "num_clients", sa.INTEGER(), server_default=sa.text("0"), nullable=False
        ),
        sa.Column(
            "is_active", sa.BOOLEAN(), server_default=sa.text("1"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
